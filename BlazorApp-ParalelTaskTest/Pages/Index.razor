@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms



@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>



<div>
    <p>
        Name:<br />
        <InputText @bind-Value="Name" />
    </p>

</div>


<div>
    <p>Name @test(Name)</p>
</div>

<div>
    <p>Factorial A @GetIdListFromString(test(Name)).ElementAt(0)</p>
</div>

<div>
    <p>Factorial B @GetIdListFromString(test(Name)).ElementAt(1)</p>
</div>

<div>
    <p>Factorial C @GetIdListFromString(test(Name)).ElementAt(2)</p>
</div>

<div>
    <p>Factorial D @GetIdListFromString(test(Name)).ElementAt(3)</p>
</div>



@code 
{

    string? Name;


    string test(string _input)
    {

        return _input;

    }

    static int factorial(int a)
    {
        if (a == 0 || a == 1) return 1;
        else return a * factorial(a - 1);
    }


    public static IList<int> GetIdListFromString(string idList)
    {


        if (idList != null)
        {


            string[] values = idList.Split(',');

            List<int> ids = new List<int>(values.Length);
            List<int> aa = new List<int>(values.Length) { 0,0,0,0};

            Task[] tasks = new Task[values.Length];


            foreach (string s in values)
            {

                int i;

                if (int.TryParse(s, out i))
                {
                    ids.Add(i);
                }


            }

            for (int j=0; j<values.Length; j++)
            {

                Console.WriteLine("agaga   " + j);
                int ff = j;
                tasks[j] = new Task(() => { 

                    Console.WriteLine("ogogo   " + ff);
                    Console.WriteLine(factorial(ids[ff]));
                    //  aa.Add(factorial(ids[ff])); 
                    aa[ff] = factorial(ids[ff]);
                });
            }

            
            foreach (Task tt in tasks)
            {
                tt.Start();

            }
           

            Task.WaitAll(tasks);
            

            return aa;


        }

        else
        {
            
            return new List<int> { 1, 1, 1, 1};
        }
    }



}